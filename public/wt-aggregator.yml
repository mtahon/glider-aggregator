openapi: 3.0.1

info:
  title: Winding Tree aggregator
  description: 'This is the interface documentation for the REST api interface with the Winding Tree Aggregator'
  contact:
    email: mathieu@windingtree.com
  license:
    name: Apache License
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
- url: http://localhost:3000/aggregator/v1
  description: Local demo server
- url: https://staging.aggregator.windingtree.net/
  description: Winding Tree staging server
- url: https://aggregator.windingtree.net/
  description: Winding Tree production server

tags:
- name: offers
  description: Operations with Offers
- name: orders
  description: Operations with Orders

paths:
  # ** Offers **
  /searchOffers:
    post:
      tags:
      - offers
      summary: Search for offers matching search criterias
      operationId: offersWithSearchCriteria
      requestBody:
        description: Search for offers matching input criteria
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteria'
            example:
              {
                "itinerary": {
                  "segments" : [{
                    "origin": {
                      "locationType": "airport",
                      "iataCode": "CDG"
                    },
                    "destination": {
                      "locationType": "airport",
                      "iataCode": "MXN"
                    },
                    "departureTime": "2021-04-14T00:00:00Z"
                  }]
                },
                "passengers": [
                  {"type": "ADT"},
                  {"type": "ADT"},
                  {"type": "CHD"},
                ]
              }
        required: true
      responses:
        200:
          description: Offers Retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        401:
          description: Authorization required
          content: {}
        403:
          description: Not authorized
          content: {}
        405:
          description: Validation exception
          content: {}
        415:
          description: Content should be application/json
          content: {}
        429:
          description: Too many requests
          content: {}
        500:
          description: Internal Server error
          content: {}
      security:
      - orgid_auth:
        - read:orders
      - orgid_token: []
      x-codegen-request-body-name: body

  # ** Orders **
  /orders/createWithOffer:
    post:
      tags:
      - orders
      summary: Place an order using a given offer
      operationId: orderCreateWithOffer
      requestBody:
        description: Reference of the offers and details of the passengers
        content:
          application/json:
            schema:
              properties:
                offerId:
                  $ref: '#/components/schemas/UUID'
                passengers: 
                  description: Indexed dictionnary of the passengers
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Passenger'
              example:
                {
                  "offerId": "11111111-2222-3333-4444-000000000001",
                  "offerItems": {
                    "11111111-2222-3333-4444-000000000001": {
                      "passengerReferences": "PAX1"
                    }
                  },
                  "passengers": {
                    "PAX1": {
                      "type": "ADT",
                      "civility": "MR",
                      "lastnames": [
                        "Marley"
                      ],
                      "firstnames": [
                        "Bob"
                      ],
                      "birthdate": "1980-03-21T00:00:00Z",
                      "contactInformation": [
                        "+32123456789",
                        "contact@org.co.uk"
                      ]
                    }
                  }
                }
        required: true
      responses:
        200:
          description: Order Created
          content:
            application/json:
              schema:
                properties:
                  orderId: 
                    description: The ID of the order Created
                    $ref: '#/components/schemas/UUID'
                  order:
                    description: The created order
                    $ref: '#/components/schemas/Order'
                  supplierSignature: 
                    description: The signature of the supplier
                    $ref: '#/components/schemas/Signature'
        401:
          description: Authorization required
          content: {}
        403:
          description: Not authorized
          content: {}
        405:
          description: Validation exception
          content: {}
        415:
          description: Content should be application/json
          content: {}
        429:
          description: Too many requests
          content: {}
        500:
          description: Internal Server error
          content: {}
      security:
      - orgid_auth:
        - write:orders
      - orgid_token: []
      x-codegen-request-body-name: body

  # Add a signature to an Order in Simard
  /orders/{orderId}/sign:
    post:
      tags:
      - orders
      summary: Add a signature to an Order in Simard
      description: Add a signature to an Order in Simard, returns the order details
      operationId: signOrder
      parameters:
      - name: orderId
        in: path
        description: ID of the order to sign
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signature'
      responses:
        200:
          description: Order sucessfully signed
          content:
            application/json:
              schema:
                properties:
                  orderId: 
                    description: The ID of the order Created
                    $ref: '#/components/schemas/UUID'
                  order:
                    description: The created order
                    $ref: '#/components/schemas/Order'
                  supplierSignature: 
                    description: The signature of the supplier
                    $ref: '#/components/schemas/Signature'
                  distributorSignature: 
                    description: The signature of the distributor
                    $ref: '#/components/schemas/Signature'
                  travelDocuments:
                    description: The travel documents provided by the supplier
                    type: object
                    properties:
                      booking:
                        description: The booking reference
                        type: string
                        pattern: "^[A-Z0-9]{6}$"
                        example: "LCHTB4"
                      etickets:
                        description: The electronic ticket references
                        type: array
                        items: 
                          type: string
                          pattern: "^[0-9]{3}-[0-9]{10}$"
                          example: "057-1438027611"
        400:
          description: Invalid ID supplied
          content: {}
        401:
          description: Authorization required
          content: {}
        403:
          description: Not authorized to retrieve this order
          content: {}
        404:
          description: Order not found
          content: {}
        415:
          description: Content should be application/json
          content: {}
        429:
          description: Too many requests, rate limit has been reached
          content: {}
      security:
      - orgid_auth:
        - write:orders
      - orgid_token: []

components:
  schemas:

    UUID:
      description: Unique identifier for Offers and Orders
      type: string
      format: uuid
      minLength: 36
      maxLength: 36
      pattern: '^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$'
      example: '11111111-2222-3333-4444-000000000001'
      
    OrgId:
      description: ORG.ID contract address identifier
      type: string
      pattern: '^0x[0-9a-f]{40}$'
      minLength: 42
      maxLength: 42
      example: '0xc0fbc1348b43d50c948edf1818b0abfdd7466b9e'

    Signature:
        description: Signature using ORG.ID
        type: object
        properties:
          agent:
            description: The ethereum address of an authorized agent of the ORG.ID
            type: string
            pattern: '^0x[0-9a-f]{40}$'
            minLength: 42
            maxLength: 42
            example: '0xc0fbc1348b43d50c948edf1818b0abfdd7466b9e'

          sign:
            description: The keccak256 signature of the order by the signatory
            type: string
            pattern: '^0x[0-9a-f]{130}$'
            minLength: 132
            maxLength: 132
            example: '0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b'
    
    Price:
      description: Price of the service
      type: object
      properties:
      
        currency:
          description: The ISO4217 currency code
          type: string
          pattern: '^[A-Z]{3}$'
          minLength: 3
          maxLength: 3
          example: 'EUR'
          
        private:
          description: The private price in currency decimals for this service that the distributor owes to the supplier.
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          minLength: 1
          maxLength: 99
          example: '40.00'
        
        public:
          description: The public price for this service. The distributor should sell the product at this price.
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          minLength: 1
          maxLength: 99
          example: '50.00'
        
        commission:
          description: The distributor commission for selling this service
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          minLength: 1
          maxLength: 99
          example: '10.00'
          
        taxes:
          description: The taxes to be collected when selling this service.
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          minLength: 1
          maxLength: 99
          example: '1.20'
          
    ServiceRestrictions:
      description: Service restrictions
      type: object
      properties:
      
        refundable:
          description: Is the service refundable?
          type: boolean
          example: false
          
        exchangeable:
          description: Is the service exchangeable?
          type: boolean
          example: false
          
        refundFee:
          description: The fee charged in case a refund is requested, expressed in currency decimals
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          example: '10.00'
          
        exchangeFee:
          description: The fee charged in case an exchange is requested, expressed in currency decimals
          type: string
          pattern: '^[0-9]+(\.[0-9]+){0,1}$'
          example: '10.00'

    Email:
      description: An email
      type: string
      pattern: '^.+?@.+\..+?$'
      example: contact@org.co.uk

    PhoneNumber:
      description: A phone number
      type: string
      pattern: '^\+[0-9]+$'
      example: "+32123456789"
          
    Passenger:
      description: A representation of a passenger
      type: object
      properties:
        type:
          description: The passenger type code as per IATA definitions
          type: string
          minLength: 3
          maxLength: 3
          enum:
          - ADT # Adult (12+y)
          - CHD # Child (2-11y)
          - INF # Infant without a seat (<2y)
          example: ADT

        civility:
          description: The civility of the passenger
          type: string
          enum:
          - MR
          - MRS
          example: 'MR'
          
        lastnames:
          description: The list of last names of this passenger
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: string
            minLength: 1
            maxLength: 42
            example: 'Marley'
            
        firstnames:
          description: The list of first names of this passenger
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: string
            minLength: 1
            maxLength: 42
            example: 'Bob'
        
        birthdate:
          description: The birthdate of the passenger
          type: string
          format: date-time
          example: '1980-03-21T00:00:00Z'

        contactInformation:
          description: The contact informations of the passenger
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/PhoneNumber'
              - $ref: '#/components/schemas/Email'
            
    Location:
      description: 'The location of a specific place'
      type: object
      properties:

        locationType:
          type: string
          enum:
            - airport
            - railstation
            - city
          example: 'airport'
          
        iataCode:
          description: 'The IATA code of the location'
          type: string
          pattern: '^[A-Z]{3}$'
          minLength: 3
          maxLength: 3
          example: 'LHR'
          

    TravelOperator:
      description: 'A specific travel operator'
      type: object
      properties:
        
        operatorType:
          description: The type of travel operator
          type: string
          enum:
          - airline
          - railway
          example: 'airline'
          
        IataCode:
          description: For airlines, the two letter IATA code
          type: string
          pattern: '^[A-Z0-9]{2}$'
          minLength: 2
          maxLength: 2
          example: 'AF'
          
    
    Segment:
      description: A section of a travel itinerary
      type: object
      properties:
        
        operator:
          $ref: '#/components/schemas/TravelOperator'
          
        origin:
          $ref: '#/components/schemas/Location'
        
        destination: 
          $ref: '#/components/schemas/Location'
          
        departureTime:
          description: The departure time of the segment
          type: string
          format: date-time
          example: '2021-04-12T23:20:50.52Z'
        
        arrivalTime:
          description: The arrival time of the segment
          type: string
          format: date-time
          example: '2021-04-14T23:20:50.52Z'
          
    ServiceClass:
      description: Describes the attributes of the service class
      type: object
      properties:
      
        name:
          description: The marketing name of this service class
          type: string
          maxLength: 24
          example: "Premium Economy"
          
        amenities:
          description: The amenities for this service class
          type: array
          maxItems: 99
          items:
            type: string
            enum:
            - meal
            - wifi
            - lounge
            - fasttrack
            - priorityBoarding
            - seatSelection
            example: meal

        checkedBaggages:
          description: the list of checked checkedBaggages
          type: object
          properties:
            quantity: 
              type: integer
              example: 2

          
    # Defines the list of transportation types
    TransportationType:
      description: Type of transportation service
      type: string
      maxLength: 24
      enum:
      - flight
      - train
      example: 'flight'
    
    # Defines the list of accomodation types
    AccomodationType:
      description: Type of accomodation service
      type: string
      maxLength: 24
      enum:
      - hotel
      example: 'hotel'

    # Defines an itinerary
    Itinerary:
      description: The itinerary of transportation
      type: object
      properties:
        
        segments:
          description: An ordered list of segments
          type: array
          minItems: 1
          maxItems: 12
          items:
            $ref: '#/components/schemas/Segment'

    # Define an Offer object
    Offer:
      description: An offer object
      type: object
      properties:

        # A list of items in the offer
        offerItems:
          description: Items included in the offer
          type: object
          additionalProperties:
            type: object
            properties:
              passengerReferences: 
                description: A space-separated list of passenger references.
                type: string
                example: "PAX1 PAX2"
          example: {
            "eb45c135-cc40-4131-85c1-35cc4071319f": { "passengerReferences": "PAX1" }
          }
            

        # An offer expiration time
        expiration:
          description: The offer expiration time. Once this time is reached, the booking of the offer is not possible anymore.
          type: string
          format: date-time
          example: '2021-04-12T23:20:50.52Z'

        # The price of the offer
        price:
          $ref: '#/components/schemas/Price'

        # The offer itinerary reference
        itineraryCombinationReference:
          description: Reference to the Offer's segment combination
          type: string
          example: 'FL1'

        # The offer class of service
        serviceClassReference:
          description: Reference to the Offer's service class 
          type: string
          example: 'PC1'
          

    # Define an Order object
    Order:
      description: An Order object
      required:
      - version
      - supplier
      - distributor
      type: object
      properties:
        # A version
        version: 
          description: A major/minor version pattern for forward compatibility
          type: string
          pattern: '^[0-9]+(\.[0-9]+)+$'
          minLength: 3
          maxLength: 12
          example: '1.0.0'
          
        # The ORG.ID of the supplier
        supplier:
          $ref: '#/components/schemas/OrgId'
        
        # The ORG.ID of the distributor
        distributor:
          $ref: '#/components/schemas/OrgId'
        
        # The type of travel service in the order
        type:
          description: Type of travel service
          type: string
          enum:
          - transportation
          - accomodation
          - lounge
          - fasttrack
          - parking
          example: 'transportation'
        
        # The sub-type of service
        subtype:
          description: The sub-type of service
          oneOf:
          - $ref: '#/components/schemas/TransportationType'
          - $ref: '#/components/schemas/AccomodationType'
          example: 'flight'
          
        # The price of the service
        price:
          $ref: '#/components/schemas/Price'
          
        # The service restrictions
        restrictions:
          $ref: '#/components/schemas/ServiceRestrictions'
          
        # The passengers involved
        passengers:
          description: The passengers involved in the order
          type: array
          minItems: 1
          maxItems: 99
          items:
            $ref: '#/components/schemas/Passenger'
            
        # For Transportation services
        itinerary:
          $ref: '#/components/schemas/Itinerary'

    # Contains the parameters for a search
    SearchCriteria:
      description: An object to provide search criteria
      type: object
      properties:

        # The option of the itinerary being searched
        itinerary:
          $ref: '#/components/schemas/Itinerary'
        
        # The passengers involved in the search
        passengers:
          description: The passengers involved in the search. Allows personalization and custom offers.
          type: array
          minItems: 1
          maxItems: 99
          items:
            $ref: '#/components/schemas/Passenger'

    SearchResults:
      description: An object to return search results
      type: object
      properties:
        
        # The proposed offers
        offers:
          description: The indexed list of offers
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Offer'

        # The itineraries involved in the offers
        itineraries:
          description: The itineraries possible for an offer
          type: object
          properties:
            # The possible combinations
            combinations:
              description: The indexed list of possible combinations
              type: object
              additionalProperties:
                description: A possible combination
                type: array
                items:
                  description: An ordered list of segment references
                  type: string
                  example: "SEG1"
              example:
                FL1: ["SEG1", "SEG2", "SEG5"]

            # The segments involved in the combinations
            segments:
              description: The indexed list of segments
              type: object
              additionalProperties:
                $ref: '#/components/schemas/Segment'

        # The service classes involved in the offer
        serviceClasses:
          description: The indexed list of service Classes
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceClass'

        # The mapping of the passenger references
        passengers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Passenger'
          example:
          - PAX1: {"type": "ADT"}

  # Defines the security schemes
  securitySchemes:
    orgid_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://staging.simard.windingtree.net/oauth/authorize
          scopes:
            write:orders: modify orders in your account
            read:orders: read your orders
            write:offers: modify offers in your account
            read:offers: read your offers

    orgid_token:
      type: apiKey
      name: orgid_token
      in: header